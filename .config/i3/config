# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# Set terminal to use
set $term alacritty
set $app_term alacritty
set $retro_term cool-retro-term --profile "Pinky"

# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 0
new_float normal

# Hide borders
hide_edge_borders none

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft:Noto Sans 12

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

#-- bindsym Ctrl+1 exec --no-startup-id "setxkbmap -model pc105 -layout us,ru"
bindcode Ctrl+10 exec --no-startup-id "setxkbmap -model pc105 -layout us,ru"
#-- bindsym Ctrl+2 exec --no-startup-id "setxkbmap -model pc105 -layout ru,us"
bindcode Ctrl+11 exec --no-startup-id "setxkbmap -model pc105 -layout ru,us"

##############################
# Start Applications
# 
# start a terminal
#-- bindsym $mod+Return exec $term
bindcode $mod+36 exec $term
#-- bindsym $mod+Shift+Return exec $retro_term
bindcode $mod+Shift+36 exec $retro_term

# start program launcher
#-- bindsym $mod+z exec --no-startup-id dmenu_run
bindcode $mod+52 exec --no-startup-id dmenu_run

#-- bindsym $mod+F1 exec telegram-desktop
bindcode $mod+67 exec telegram-desktop
#-- bindsym $mod+F2 exec xdg-open http://
bindcode $mod+68 exec xdg-open http://
#-- bindsym $mod+F3 exec $app_term -e ranger
bindcode $mod+69 exec $app_term -e ranger
#-- bindsym $mod+F4 exec $app_term -e sudo ranger
bindcode $mod+70 exec $app_term -e sudo ranger

# pause dunst
#-- bindsym $mod+d exec --no-startup-id "killall -SIGUSR1 dunst"
bindcode $mod+40 exec --no-startup-id "killall -SIGUSR1 dunst"
# resume dunst
#-- bindsym $mod+Ctrl+d exec --no-startup-id "killall -SIGUSR2 dunst"
bindcode $mod+Ctrl+40 exec --no-startup-id "killall -SIGUSR2 dunst"
# restart dunst
#-- bindsym $mod+Shift+d exec --no-startup-id "killall dunst; exec notify-send 'restart dunst'"
bindcode $mod+Shift+40 exec --no-startup-id "killall dunst; exec notify-send 'restart dunst'"
#-- bindsym $mod+Ctrl+x --release exec --no-startup-id xkill
bindcode $mod+Ctrl+53 --release exec --no-startup-id xkill

# screenshoting
#-- bindsym Print exec --no-startup-id ~/Scripts/screenshot.sh
bindcode 218 exec --no-startup-id ~/Scripts/screenshot.sh
#-- bindsym $mod+Print --release exec --no-startup-id ~/Scripts/screenshot.sh -s
bindcode $mod+218 --release exec --no-startup-id ~/Scripts/screenshot.sh -s

# focus_follows_mouse no

# border on, see where focus is
#-- bindsym $mod+apostrophe exec i3-msg border pixel 3
bindcode $mod+48 exec i3-msg border pixel 3
bindcode --release $mod+48 exec i3-msg border pixel 0

# kill focused window
#-- bindsym $mod+s kill
bindcode $mod+39 kill
# change focus
#-- bindsym $mod+j focus left
bindcode $mod+44 focus left
#-- bindsym $mod+k focus down
bindcode $mod+45 focus down
#-- bindsym $mod+l focus up
bindcode $mod+46 focus up
#-- bindsym $mod+semicolon focus right
bindcode $mod+47 focus right

# move focused window
#-- bindsym $mod+Shift+j move left
bindcode $mod+Shift+44 move left
#-- bindsym $mod+Shift+k move down
bindcode $mod+Shift+45 move down
#-- bindsym $mod+Shift+l move up
bindcode $mod+Shift+46 move up
#-- bindsym $mod+Shift+semicolon move right
bindcode $mod+Shift+47 move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth no

# split orientation
#-- bindsym $mod+g split h; exec notify-send 'tile horizontally'
bindcode $mod+42 split h; exec notify-send 'tile horizontally'
#-- bindsym $mod+v split v; exec notify-send 'tile vertically'
bindcode $mod+55 split v; exec notify-send 'tile vertically'
#-- bindsym $mod+Shift+x split toggle
bindcode $mod+Shift+53 split toggle

# toggle fullscreen mode for the focused container
#-- bindsym $mod+F11 fullscreen toggle
bindcode $mod+95 fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
#bindsym $mod+x layout toggle split

# toggle tiling / floating
#-- bindsym $mod+Shift+space floating toggle
bindcode $mod+Shift+65 floating toggle

# change focus between tiling / floating windows
#-- bindsym $mod+space focus mode_toggle
bindcode $mod+65 focus mode_toggle

# toggle sticky
#bindsym $mod+Shift+s sticky toggle

# focus the parent container
#-- bindsym $mod+a focus parent
bindcode $mod+38 focus parent

# move the currently focused window to the scratchpad
#-- bindsym $mod+Shift+Tab move scratchpad
bindcode $mod+Shift+23 move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
#-- bindsym $mod+Tab scratchpad show
bindcode $mod+23 scratchpad show

#navigate workspaces next / previous
#-- bindsym $mod+Ctrl+Right workspace next
bindcode $mod+Ctrl+114 workspace next
#-- bindsym $mod+Ctrl+Left workspace prev
bindcode $mod+Ctrl+113 workspace prev

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:ï‚¬
set $ws1 1:q
set $ws2 2:w
set $ws3 3:e
set $ws4 4:r
set $ws5 5:u
set $ws6 6:i
set $ws7 7:o
set $ws8 8:p

set $left DVI-D-0
set $right VGA-0
workspace $ws1 output $left
workspace $ws2 output $left
workspace $ws3 output $left
workspace $ws4 output $left
workspace $ws5 output $right
workspace $ws6 output $right
workspace $ws7 output $right
workspace $ws8 output $right

# switch to workspace
#-- bindsym $mod+q workspace $ws1
bindcode $mod+24 workspace $ws1
#-- bindsym $mod+w workspace $ws2
bindcode $mod+25 workspace $ws2
#-- bindsym $mod+e workspace $ws3
bindcode $mod+26 workspace $ws3
#-- bindsym $mod+r workspace $ws4
bindcode $mod+27 workspace $ws4
#-- bindsym $mod+u workspace $ws5
bindcode $mod+30 workspace $ws5
#-- bindsym $mod+i workspace $ws6
bindcode $mod+31 workspace $ws6
#-- bindsym $mod+o workspace $ws7
bindcode $mod+32 workspace $ws7
#-- bindsym $mod+p workspace $ws8
bindcode $mod+33 workspace $ws8

# Move focused container to workspace
#-- bindsym $mod+Shift+q move container to workspace $ws1
bindcode $mod+Shift+24 move container to workspace $ws1
#-- bindsym $mod+Shift+w move container to workspace $ws2
bindcode $mod+Shift+25 move container to workspace $ws2
#-- bindsym $mod+Shift+e move container to workspace $ws3
bindcode $mod+Shift+26 move container to workspace $ws3
#-- bindsym $mod+Shift+r move container to workspace $ws4
bindcode $mod+Shift+27 move container to workspace $ws4
#-- bindsym $mod+Shift+u move container to workspace $ws5
bindcode $mod+Shift+30 move container to workspace $ws5
#-- bindsym $mod+Shift+i move container to workspace $ws6
bindcode $mod+Shift+31 move container to workspace $ws6
#-- bindsym $mod+Shift+o move container to workspace $ws7
bindcode $mod+Shift+32 move container to workspace $ws7
#-- bindsym $mod+Shift+p move container to workspace $ws8
bindcode $mod+Shift+33 move container to workspace $ws8

# Move to workspace with focused container
#-- bindsym $mod+Ctrl+q move container to workspace $ws1; workspace $ws1
bindcode $mod+Ctrl+24 move container to workspace $ws1; workspace $ws1
#-- bindsym $mod+Ctrl+w move container to workspace $ws2; workspace $ws2
bindcode $mod+Ctrl+25 move container to workspace $ws2; workspace $ws2
#-- bindsym $mod+Ctrl+e move container to workspace $ws3; workspace $ws3
bindcode $mod+Ctrl+26 move container to workspace $ws3; workspace $ws3
#-- bindsym $mod+Ctrl+r move container to workspace $ws4; workspace $ws4
bindcode $mod+Ctrl+27 move container to workspace $ws4; workspace $ws4
#-- bindsym $mod+Ctrl+u move container to workspace $ws5; workspace $ws5
bindcode $mod+Ctrl+30 move container to workspace $ws5; workspace $ws5
#-- bindsym $mod+Ctrl+i move container to workspace $ws6; workspace $ws6
bindcode $mod+Ctrl+31 move container to workspace $ws6; workspace $ws6
#-- bindsym $mod+Ctrl+o move container to workspace $ws7; workspace $ws7
bindcode $mod+Ctrl+32 move container to workspace $ws7; workspace $ws7
#-- bindsym $mod+Ctrl+p move container to workspace $ws8; workspace $ws8
bindcode $mod+Ctrl+33 move container to workspace $ws8; workspace $ws8

# Open applications on specific workspaces
assign [class="TelegramDesktop"] $ws4
assign [class="Element.*"] $ws4
# for_window [title="cmus"] move scratchpad
assign [class="^Firef*"] $ws2
# assign [class="Pale moon"] $ws2
# assign [class="Pcmanfm"] $ws3
# assign [class="Skype"] $ws5

# Disable borders for these
for_window [class="Firefox"] border none
for_window [class="^Chrom*"] border none
#for_window [class="TelegramDesktop"] border none

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
#-- bindsym $mod+Shift+c reload
bindcode $mod+Shift+54 reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
#-- bindsym $mod+Shift+s restart
bindcode $mod+Shift+39 restart

# exit i3 (logs you out of your X session)
#-- bindsym $mod+Shift+f exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindcode $mod+Shift+41 exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Set shut down, restart and locking features
#-- bindsym $mod+0 mode "$mode_system"
bindcode $mod+19 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    #-- bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindcode 46 exec --no-startup-id i3exit lock, mode "default"
    #-- bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindcode 39 exec --no-startup-id i3exit suspend, mode "default"
    #-- bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindcode 30 exec --no-startup-id i3exit switch_user, mode "default"
    #-- bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindcode 26 exec --no-startup-id i3exit logout, mode "default"
    #-- bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindcode 43 exec --no-startup-id i3exit hibernate, mode "default"
    #-- bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindcode 27 exec --no-startup-id i3exit reboot, mode "default"
    #-- bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"
    bindcode Shift+39 exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    #-- bindsym Return mode "default"
    bindcode 36 mode "default"
    #-- bindsym Escape mode "default"
    bindcode 9 mode "default"
}

# Resize window (you can also use the mouse for that)
#-- bindsym $mod+h mode "resize"
bindcode $mod+43 mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the windowâ€™s width.
        # Pressing right will grow the windowâ€™s width.
        # Pressing up will shrink the windowâ€™s height.
        # Pressing down will grow the windowâ€™s height.
        #-- bindsym h resize shrink width 5 px or 5 ppt
        bindcode 43 resize shrink width 5 px or 5 ppt
        #-- bindsym j resize grow height 5 px or 5 ppt
        bindcode 44 resize grow height 5 px or 5 ppt
        #-- bindsym k resize shrink height 5 px or 5 ppt
        bindcode 45 resize shrink height 5 px or 5 ppt
        #-- bindsym l resize grow width 5 px or 5 ppt
        bindcode 46 resize grow width 5 px or 5 ppt

        # exit resize mode: Enter or Escape
        #-- bindsym Return mode "default"
        bindcode 36 mode "default"
        #-- bindsym Escape mode "default"
        bindcode 9 mode "default"
}

# Autostart applications
exec --no-startup-id ~/.config/i3/autostart.sh

# Start i3bar to display a workspace bar (plus the system information i3status if available)
bar {
	status_command py3status -c ~/.config/i3/i3status.conf | ~/.config/i3/i3-keyboard-layout i3status
	position top
	mode hide

## please set your primary output first. Example: 'xrandr --output eDP1 --primary'
	tray_output primary

	bindsym button4 nop
	bindsym button5 nop
	font xft:Liberation Sans 10
	strip_workspace_numbers yes

	colors {
        background $transparent
        background #2B2C2B
        statusline #F9FAF9
        separator  #454947

#                          border  backgr. text
        focused_workspace  #F9FAF9 #4A90D9 #2B2C2B
        active_workspace   #595B5B #353836 #FDF6E3
        inactive_workspace #595B5B #353836 #EEE8D5
        urgent_workspace   #4A90D9 #FDF6E3 #E5201D
    }
}

# hide/unhide i3status bar
#-- bindsym $mod+m bar mode toggle
bindcode $mod+58 bar mode toggle

# Theme colors
# class                 border  backgr. text    indic.  child_border
client.focused          #4A90D9 #4A90D9 #80FFF9 #FDF6E3
client.focused_inactive #434745 #434745 #4A90D9 #454948
client.unfocused        #434745 #434745 #4A90D9 #454948
client.urgent           #CB4B16 #FDF6E3 #4A90D9 #268BD2
client.placeholder      #000000 #0c0c0c #ffffff #000000 #0c0c0c

client.background       #2B2C2B

#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
#gaps inner 5
#gaps outer 0

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
# smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
#set $mode_gaps Gaps: (o) outer, (i) inner
#set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
#bindsym $mod+Shift+g mode "$mode_gaps"

#mode "$mode_gaps" {
#        bindsym o      mode "$mode_gaps_outer"
#        bindsym i      mode "$mode_gaps_inner"
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
#mode "$mode_gaps_inner" {
#        bindsym plus  gaps inner current plus 5
#        bindsym minus gaps inner current minus 5
#        bindsym 0     gaps inner current set 0
#
#        bindsym Shift+plus  gaps inner all plus 5
#        bindsym Shift+minus gaps inner all minus 5
#        bindsym Shift+0     gaps inner all set 0
#
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
#mode "$mode_gaps_outer" {
#        bindsym plus  gaps outer current plus 5
#        bindsym minus gaps outer current minus 5
#        bindsym 0     gaps outer current set 0
#
#        bindsym Shift+plus  gaps outer all plus 5
#        bindsym Shift+minus gaps outer all minus 5
#        bindsym Shift+0     gaps outer all set 0
#
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
